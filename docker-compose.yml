networks:
  mlops:
services:
  mlflow:
    image: willemmeints/mlflow:2.1.1
    networks:
      mlops:
    environment:
      DB_HOST: database
      DB_NAME: mlflow
      DB_USER: postgres
      DB_PASS: ${DB_PASSWORD}
      DB_PORT: 5432
    ports:
      - 5000:5000
    depends_on:
      - database
  workflow_server:
    name: workflow_server
    image: mlops-in-a-can/workflow-server:latest
    build:
      context: docker/images/workflow-server
    networks:
      mlops:
    environment:
      DB_HOST: database
      DB_NAME: prefect
      DB_USER: postgres
      DB_PASS: ${DB_PASSWORD}
      DB_PORT: 5432
      EXTRA_PIP_PACKAGES: "prefect_aws"
    ports:
      - 4200:4200
    depends_on:
      - database
  prefect_worker:
    image: mlops-in-a-can/workflow-agent
    build:
      context: docker/images/workflow-agent
    networks:
      mlops:
    environment:
      PREFECT_API_URL: http://prefect:4200/api
      MLFLOW_TRACKING_URI: http://mlflow:5000
      QUEUE_NAME: default
      EXTRA_PIP_PACKAGES: "prefect_aws s3fs mlflow==2.1.1 python-dotenv==0.21.1 pandas==1.5.3 scikit-learn==1.2.1"
    depends_on:
      - prefect
  database:
    image: postgres:14
    networks:
      mlops:
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: /var/lib/postgres/data/pgdata
    ports:
      - 5432:5432
    volumes:
      - ./docker/volumes/postgres/init:/docker-entrypoint-initdb.d/
      - postgres_data:/var/lib/postgres/data/pgdata
  datalake:
    networks:
      mlops:
        aliases:
          - datalake
          - localhost
    image: bitnami/minio:latest
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_DEFAULT_BUCKETS: "raw,intermediate,cleaned,archive,flows"
    volumes:
      - minio_data:/data
volumes:
  minio_data:
  postgres_data:
